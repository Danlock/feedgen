// Code generated by goa v2.0.0-wip, DO NOT EDIT.
//
// feedgen HTTP client CLI support package
//
// Command:
// $ goa gen github.com/danlock/go-rss-gen/design

package client

import (
	"encoding/json"
	"fmt"

	feedgen "github.com/danlock/go-rss-gen/gen/feedgen"
	goa "goa.design/goa"
)

// BuildMangaPayload builds the payload for the feedgen manga endpoint from CLI
// flags.
func BuildMangaPayload(feedgenMangaBody string) (*feedgen.MangaPayload, error) {
	var err error
	var body MangaRequestBody
	{
		err = json.Unmarshal([]byte(feedgenMangaBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, example of valid JSON:\n%s", "'{\n      \"titles\": [\n         \"Quia at consectetur aliquam.\",\n         \"Ex temporibus.\"\n      ]\n   }'")
		}
		if body.Titles == nil {
			err = goa.MergeErrors(err, goa.MissingFieldError("titles", "body"))
		}
		if len(body.Titles) < 1 {
			err = goa.MergeErrors(err, goa.InvalidLengthError("body.titles", body.Titles, len(body.Titles), 1, true))
		}
		if err != nil {
			return nil, err
		}
	}
	if err != nil {
		return nil, err
	}
	v := &feedgen.MangaPayload{}
	if body.Titles != nil {
		v.Titles = make([]string, len(body.Titles))
		for i, val := range body.Titles {
			v.Titles[i] = val
		}
	}
	return v, nil
}
